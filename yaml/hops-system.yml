apiVersion: v1
kind: Namespace
metadata:
  name: hops-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: configmaps-reader
  namespace: hops-system
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: configmaps-reader-binding
  namespace: hops-system
subjects:
- kind: ServiceAccount
  name: default
  apiGroup: ""
roleRef:
  kind: Role
  name: configmaps-reader
  apiGroup: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--hopsworks
  namespace: hops-system
data:
  hopsworksAPI: |-
    {
        "host": "hopsworks.glassfish.service.consul",
        "port": "8182"
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--serving
  namespace: hops-system
  labels:
    serving.hops.works/reserved: "true"
    serving.hops.works/scope: serving
data:
  storageInitializer: |-
    {
        "image": "javierdlrm/storage-initializer:latest",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi"
    }
  authenticator: |-
    {
        "allowedProjectUserRoles": [ "Data owner", "Data scientist" ],
        "allowedUserRoles": [ "HOPS_ADMIN", "HOPS_USER" ],
        "reSyncCacheSeconds": 0
    }
  predictor: |-
    {
        "terminationGracePeriodSeconds": 3
    }
  transformer: |-
    {
        "terminationGracePeriodSeconds": 3
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--logging
  namespace: hops-system
data:
  kafka: |-
    {
        "brokers": "kafka.service.consul:9091"
    }
  inferenceLogger: |-
    {
        "image": "javierdlrm/inference-logger:latest",
        "cpuRequest": "0.1",
        "cpuLimit": "1",
        "memoryRequest": "128Mi",
        "memoryLimit": "1Gi"
    }